#+LATEX_CLASS: ramsay-org-article
#+LATEX_CLASS_OPTIONS: [oneside,A4paper,12pt]
#+AUTHOR: Ramsay Leung
#+EMAIL: ramsayleung@gmail.com
#+DATE: 2022-05-03 Tue 08:56
#+HUGO_BASE_DIR: ~/code/org/leetcode_book
#+HUGO_SECTION: docs/400
#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_DRAFT: false
#+DATE: [2022-05-03 Tue 08:56]
#+TITLE: 405. Convert a Number to Hexadecimal
#+HUGO_WEIGHT: 405

* Description
  source: https://leetcode.com/problems/convert-a-number-to-hexadecimal/

  Given an integer ~num~, return a string representing its hexadecimal representation. For negative integers, [[https://en.wikipedia.org/wiki/Two%27s_complement][twoâ€™s complement]] method is used.

  All the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself.

  *Note*: You are not allowed to use any built-in library method to directly solve this problem.

  *Example 1*:

  #+begin_example
  Input: num = 26
  Output: "1a"
  #+end_example

  *Example 2*:

  #+begin_example
  Input: num = -1
  Output: "ffffffff"
  #+end_example
 

  *Constraints*:

  - ~-2^31 <= num <= 2^31 - 1~
* Solution
  #+begin_src C++
    #include <vector>
    class Solution {
    public:
      string toHex(int num) {
	// Space complexity: O(1)
	// Time complexity: O(N/4) => O(N)
	static std::vector<std::string> hexmap{"0", "1", "2", "3", "4", "5",
					       "6", "7", "8", "9", "a", "b",
					       "c", "d", "e", "f"};

	if (num == 0) {
	  return "0";
	}

	uint32_t n = num;
	std::string result;
	while (n != 0) {
	  result = hexmap[n & 15] + result;
	  n = n >> 4;
	}

	return result;
      }
    };
  #+end_src


#+LATEX_CLASS: ramsay-org-article
#+LATEX_CLASS_OPTIONS: [oneside,A4paper,12pt]
#+AUTHOR: Ramsay Leung
#+EMAIL: ramsayleung@gmail.com
#+DATE: 2020-04-26T01:26:28
source: https://leetcode.com/problems/permutation-sequence/

The set ~[1,2,3,...,n]~ contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

1. "123"
2. "132"
3. "213"
4. "231"
5. "312"
6. "321"

Given n and k, return the kth permutation sequence.

*Note*:

+ Given n will be between 1 and 9 inclusive.
+ Given k will be between 1 and n! inclusive.

*Example 1*:

#+begin_example
Input: n = 3, k = 3
Output: "213"
#+end_example

*Example 2*:

#+begin_example
Input: n = 4, k = 9
Output: "2314"
#+end_example

#+begin_src python
  from itertools import permutations
  from typing import List


  # Runtime: 2092 ms, faster than 12.05% of Python3 online submissions for Permutation Sequence.
  # time complexity: O(n!)
  # space complexity: O(n!)
  class Solution:
      def getPermutation(self, n: int, k: int) -> str:
	  s = list(permutations(range(1, n+1)))[k-1]
	  return "".join(map(str, s))

#+end_src
